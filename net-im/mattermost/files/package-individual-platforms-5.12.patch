diff -rupN mattermost-server/Makefile mattermost-server-patched/Makefile
--- mattermost-server/Makefile	2019-06-29 13:07:50.396825837 +0200
+++ mattermost-server-patched/Makefile	2019-06-30 13:38:03.516793232 +0200
@@ -1,4 +1,4 @@
-.PHONY: build package run stop run-client run-server stop-client stop-server restart restart-server restart-client start-docker clean-dist clean nuke check-style check-client-style check-server-style check-unit-tests test dist setup-mac prepare-enteprise run-client-tests setup-run-client-tests cleanup-run-client-tests test-client build-linux build-osx build-windows internal-test-web-client vet run-server-for-web-client-tests
+.PHONY: build package run stop run-client run-server stop-client stop-server restart restart-server restart-client start-docker clean-dist clean nuke check-style check-client-style check-server-style check-unit-tests test dist setup-mac prepare-enteprise run-client-tests setup-run-client-tests cleanup-run-client-tests test-client build-linux build-osx build-windows package-common package-linux package-osx package-windows internal-test-web-client vet run-server-for-web-client-tests
 
 ROOT := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
 
diff -rupN mattermost-server/build/release.mk mattermost-server-patched/build/release.mk
--- mattermost-server/build/release.mk	2019-06-29 13:07:50.437825837 +0200
+++ mattermost-server-patched/build/release.mk	2019-06-29 13:14:26.020819140 +0200
@@ -20,7 +20,7 @@ build-client:
 
 	cd $(BUILD_WEBAPP_DIR) && $(MAKE) build
 
-package:
+package-common:
 	@ echo Packaging mattermost
 
 	@# Remove any old files
@@ -72,6 +72,7 @@ endif
 	@# ----- PLATFORM SPECIFIC -----
 
 	@# Make osx package
+package-osx: package-common
 	@# Copy binary
 ifeq ($(BUILDER_GOOS_GOARCH),"darwin_amd64")
 	cp $(GOPATH)/bin/mattermost $(DIST_PATH)/bin # from native bin dir, not cross-compiled
@@ -92,6 +93,7 @@ endif
 	rm -f $(DIST_PATH)/prepackaged_plugins/*
 
 	@# Make windows package
+package-windows: package-common
 	@# Copy binary
 ifeq ($(BUILDER_GOOS_GOARCH),"windows_amd64")
 	cp $(GOPATH)/bin/mattermost.exe $(DIST_PATH)/bin # from native bin dir, not cross-compiled
@@ -112,6 +114,7 @@ endif
 	rm -f $(DIST_PATH)/prepackaged_plugins/*
 
 	@# Make linux package
+package-linux: package-common
 	@# Copy binary
 ifeq ($(BUILDER_GOOS_GOARCH),"linux_amd64")
 	cp $(GOPATH)/bin/mattermost $(DIST_PATH)/bin # from native bin dir, not cross-compiled
@@ -127,6 +130,14 @@ endif
 	@# Package
 	tar -C dist -czf $(DIST_PATH)-$(BUILD_TYPE_NAME)-linux-amd64.tar.gz mattermost
 	@# Don't clean up native package so dev machines will have an unzipped package available
-	@#rm -f $(DIST_PATH)/bin/mattermost
+	@# Cleanup
+	rm -f $(DIST_PATH)/bin/mattermost
+
+package: package-linux package-windows package-osx
+	tar -xzf $(DIST_PATH)-$(BUILD_TYPE_NAME)-$(shell $(GO) env GOOS)-amd64.tar.gz \
+		--wildcards "*/bin/mattermost*" --to-stdout > $(DIST_PATH)/bin/mattermost
+ifeq ($(BUILDER_GOOS_GOARCH), "windows_amd64")
+	mv $(DIST_PATH)/bin/mattermost $(DIST_PATH)/bin/mattermost.exe
+endif
 
 	rm -rf tmpprepackaged
